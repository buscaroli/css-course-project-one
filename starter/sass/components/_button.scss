
.btn {
    &:link,
    &:visited {
        font-size: $default-font-size;
        text-transform: uppercase;
        text-decoration: none;
        padding: 1.5rem 4rem;
        display: inline-block; /* to prevent the button from overriding other
                                    elements. Also, being inline-block, it is 
                                    treated as a text element and we can apply 
                                    the property text: center to its parent. */
        border-radius: 10rem;
        transition: all .2s;
        position: relative; /* to use the btn properties of top and left*/
    }

        
    &:hover {
        transform: translateY(-0.3rem);
        box-shadow: 0 1rem 2rem rgba($color-black, 0.2);

        &::after {
            transform: scaleX(1.3) scaleY(1.5);
            opacity: 0;
        
        }
    }

    &:active {
        transform: translateY(-0.1rem);
        box-shadow: 0 .5rem 1rem rgba($color-black, 0.2);
    }

    &--white {
        background-color: $color-white;
        color:$color-dark-grey;

        &::after {
            background-color: $color-white;
        }
    }

    &--green {
        background-color: $color-primary;
        color:$color-white;

        &::after {
            background-color: $color-primary;
        }
    }

    &::after {
        /* It's mandatory to add a content and display property 
            when using pseudo-classes!! . Creating a second element
            that looks like the button and moving it behind it, so we
            can play with different transformations.*/
        content: "";
        display: inline-block;
        height: 100%;
        width: 100%;
        border-radius: 10rem;
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
        transition: all 0.4s;
    }

    &--animated {
        animation: moveInBottom .5s ease-out .5s;
        animation-fill-mode: backwards; /* applies the properties of the first
            keyframe before the animation starts, in this case opacity to 0
            and translateY 20px. */
        
    }
}

.btn-text {
    &:link,
    &:visited {
        font-size: $default-font-size;
        font-weight: 700;
        color: $color-primary;
        display: inline-block;
        text-decoration: none;
        border-bottom: .1rem solid $color-primary;
        padding: .3rem;
        transition: all .2s;
    }

    &:hover {
        background-color: $color-primary;
        color: $color-white;
        box-shadow: 0 1rem 2rem rgba($color-black, .15);
        transform: translateY(-.2rem);
    }

    &:active {
        box-shadow: 0 .5rem 1rem rgba($color-black, .15);
        transform: translateY(0);
    }
}